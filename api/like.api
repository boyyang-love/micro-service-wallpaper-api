syntax = "v1"

import "base.api"

type (
    LikeCreateOrUpdateReq {
        UploadId string `json:"upload_id"`
        Status bool `json:"status"`
    }
    LikeCreateOrUpdateRes {
        Base
    }
)

type (
    LikeListReq {
        UploadId string `form:"upload_id"`
    }
    LikeListRes {
        Base
        Data []string `json:"data"`
    }
)

type (
    LikeNumReq {
        UploadId string `form:"upload_id"`
    }
    LikeNumRes {
        Base
        Data LikeNumResData `json:"data"`
    }
    LikeNumResData {
        Num int64 `json:"num"`
    }
)

type (
    UserLikeListReq {
        BasePage
        Type string `form:"type,optional"`
    }
    UserLikeListRes {
        Base
        Data UserLikeListData `json:"data"`
    }
    UserLikeListData {
        BaseRecord
        Records []UserLikeListRecord `json:"records"`
    }
    UserLikeListRecord {
        BaseTime
        Id string `json:"id"`
        FilePath string `json:"file_path"`
        FileName string `json:"file_name"`
        W int `json:"w"`
        H int `json:"h"`
        Type string `json:"type"`
    }

    UserDownloadAndLikeSummaryRes {
        Base
        Data UserDownloadAndLikeSummaryData `json:"data"`
    }
    UserDownloadAndLikeSummaryData {
        Download int64 `json:"download"`
        Like int64 `json:"like"`
        Discover int64 `json:"discover"`
    }
)

@server(
    group: like
    timeout:  20s
)
service wallpaper_pc_backend {
    @handler LikeNum
    get /like/num (LikeNumReq) returns (LikeNumRes)
}

@server(
    jwt: Auth
    group: like
    timeout:  20s
)
service wallpaper_pc_backend {
    @handler LikeCreate
    post /like/create (LikeCreateOrUpdateReq) returns (LikeCreateOrUpdateRes)

    @handler LikeList
    get /like/list (LikeListReq) returns (LikeListRes)

    @handler UserLikeList
    get /like/user/list (UserLikeListReq) returns (UserLikeListRes)

    @handler UserDownloadAndLikeSummary
    get /like/user/downloadAndLikeSummary () returns (UserDownloadAndLikeSummaryRes)
}