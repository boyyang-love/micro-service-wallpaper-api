// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type Base struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type BasePage struct {
	Page  int `form:"page"`
	Limit int `form:"limit"`
}

type BaseRecord struct {
	Page  int   `json:"page"`
	Limit int   `json:"limit"`
	Total int64 `json:"total"`
}

type BaseTime struct {
	Created int64 `json:"created"`
	Updated int64 `json:"updated"`
}

type CategoryCreateReq struct {
	Name string `json:"name"`
	Sort int    `json:"sort"`
}

type CategoryCreateRes struct {
	Base
}

type CategoryInfo struct {
	BaseRecord
	Id   string `json:"id"`
	Name string `json:"name"`
}

type CategoryInfoData struct {
	BaseRecord
	Records []CategoryInfo `json:"records"`
}

type CategoryInfoReq struct {
	BasePage
	Name string `form:"name,optional"`
}

type CategoryInfoRes struct {
	Base
	Data CategoryInfoData `json:"data"`
}

type CategoryRemoveReq struct {
	Id string `json:"id"`
}

type CategoryRemoveRes struct {
	Base
}

type CategorySummary struct {
	BaseRecord
	Id     string                      `json:"id"`
	Name   string                      `json:"name"`
	Upload []CategorySummaryUploadInfo `json:"upload"`
}

type CategorySummaryListData struct {
	BaseRecord
	Records []CategorySummary `json:"records"`
}

type CategorySummaryListReq struct {
	BasePage
	Type string `form:"type"`
}

type CategorySummaryListRes struct {
	Base
	Data CategorySummaryListData `json:"data"`
}

type CategorySummaryUploadInfo struct {
	Id string `json:"id"`
}

type CategoryUpdateReq struct {
	Id   string `json:"id"`
	Name string `json:"name"`
	Sort int    `json:"sort"`
}

type CategoryUpdateRes struct {
	Base
}

type CreateTagReq struct {
	Name string `json:"name"`
	Type string `json:"type"`
	Sort int    `json:"sort"`
}

type CreateTagRes struct {
	Base
}

type ImageDeleteReq struct {
	BucketName string   `json:"bucket_name"`
	Id         string   `json:"id"`
	Paths      []string `json:"paths"`
}

type ImageDeleteRes struct {
	Base
}

type ImageInfo struct {
	BaseTime
	Id             string          `json:"id"`
	Hash           string          `json:"hash"`
	FileName       string          `json:"file_name"`
	OriginFileSize int64           `json:"origin_file_size"`
	FileSize       int64           `json:"file_size"`
	OriginType     string          `json:"origin_type"`
	FileType       string          `json:"file_type"`
	OriginFilePath string          `json:"origin_file_path"`
	FilePath       string          `json:"file_path"`
	Type           string          `json:"type"`
	W              int             `json:"w"`
	H              int             `json:"h"`
	Status         int             `json:"status"`
	UserId         string          `json:"user_id"`
	Tags           []TagInfo       `json:"tags"`
	Category       []CategoryInfo  `json:"category"`
	Recommend      []RecommendInfo `json:"recommend,optional"`
}

type ImageInfoByCategoryReq struct {
	BasePage
	Type       string `form:"type"`
	CategoryId string `form:"category_id,optional"`
}

type ImageInfoByCategoryRes struct {
	Base
	Data ImageInfoByCategoryResdata `json:"data"`
}

type ImageInfoByCategoryResdata struct {
	BaseRecord
	Records []ImageInfoCategory `json:"records"`
}

type ImageInfoByIdReq struct {
	Id string `form:"id"`
}

type ImageInfoByIdRes struct {
	Base
	Data ImageInfo `json:"data"`
}

type ImageInfoCategory struct {
	BaseTime
	Id       string `json:"id"`
	FileName string `json:"file_name"`
	FilePath string `json:"file_path"`
	W        int    `json:"w"`
	H        int    `json:"h"`
}

type ImageInfoReq struct {
	BasePage
	FileName string `form:"file_name,optional"`
	Type     string `form:"type,optional"`
	Status   int    `form:"status,optional"`
}

type ImageInfoRes struct {
	Base
	Data ImageInfoResdata `json:"data"`
}

type ImageInfoResdata struct {
	BaseRecord
	Records []ImageInfo `json:"records"`
}

type ImageUpdateReq struct {
	Id        string   `json:"id"`
	FileName  string   `json:"file_name"`
	Type      string   `json:"type"`
	Status    int      `json:"status"`
	Tags      []string `json:"tags,optional"`
	Category  []string `json:"category,optional"`
	Recommend []string `json:"recommend,optional"`
}

type ImageUpdateRes struct {
	Base
}

type ImageUploadReq struct {
	FileName   string `form:"file_name"`
	Type       string `form:"type,optional"`
	RootDir    string `form:"root_dir"`
	Dir        string `form:"dir"`
	BucketName string `form:"bucket_name"`
	Quality    uint32 `form:"quality"`
	Status     int    `form:"status"`
	Tags       string `form:"tags,optional"`
	Category   string `form:"category,optional"`
	Recommend  string `form:"recommend,optional"`
}

type ImageUploadRes struct {
	Base
	Data ImageUploadResdata `json:"data"`
}

type ImageUploadResdata struct {
	FileName   string `json:"file_name"`
	Path       string `json:"path"`
	OriginPath string `json:"origin_path"`
}

type LikeCreateOrUpdateReq struct {
	UploadId string `json:"upload_id"`
	Status   bool   `json:"status"`
}

type LikeCreateOrUpdateRes struct {
	Base
}

type RecommendCreateReq struct {
	Name string `json:"name"`
	Sort int    `json:"sort":"sort"`
}

type RecommendCreateRes struct {
	Base
}

type RecommendInfo struct {
	BaseRecord
	Id   string `json:"id"`
	Name string `json:"name"`
}

type RecommendInfoData struct {
	BaseRecord
	Records []RecommendInfo `json:"records"`
}

type RecommendInfoReq struct {
	BasePage
	Name string `form:"name,optional"`
}

type RecommendInfoRes struct {
	Base
	Data RecommendInfoData `json:"data"`
}

type RecommendListInfo struct {
	BaseTime
	Id       string `json:"id"`
	FilePath string `json:"file_path"`
	FileName string `json:"file_name"`
}

type RecommendListReq struct {
	BasePage
	Id   string `form:"id"`
	Type string `form:"type"`
}

type RecommendListRes struct {
	Base
	Data RecommendListResData `json:"data"`
}

type RecommendListResData struct {
	BaseRecord
	Records []RecommendListInfo `json:"records"`
}

type RecommendRemoveReq struct {
	Id string `json:"id"`
}

type RecommendRemoveRes struct {
	Base
}

type RecommendUpdateReq struct {
	Id   string `json:"id"`
	Name string `json:"name"`
	Sort int    `json:"sort"`
}

type RecommendUpdateRes struct {
	Base
}

type RemoveTagReq struct {
	Id string `json:"id"`
}

type RemoveTagRes struct {
	Base
}

type SignInReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type SignInRes struct {
	Base
	Data SignInResData `json:"data"`
}

type SignInResData struct {
	Token    string                `json:"token"`
	UserInfo SignInResDataUserInfo `json:"user_info"`
}

type SignInResDataUserInfo struct {
	Id       string `json:"id"`
	Username string `json:"username"`
	Motto    string `json:"motto"`
	Address  string `json:"address"`
	Tel      string `json:"tel"`
	Email    string `json:"email"`
	QQ       string `json:"qq"`
	Wechat   string `json:"wechat"`
	GitHub   string `json:"git_hub"`
	Role     string `json:"role"`
	Avatar   string `json:"avatar"`
	Cover    string `json:"cover"`
}

type SignUpReq struct {
}

type SignUpRes struct {
}

type TagInfo struct {
	BaseTime
	Id   string `json:"id"`
	Name string `json:"name"`
	Type string `json:"type"`
}

type TagInfoReq struct {
	BasePage
	Name string `form:"name,optional"`
	Type string `form:"type,optional"`
}

type TagInfoRes struct {
	Base
	Data TagInfoResData `json:"data"`
}

type TagInfoResData struct {
	BaseRecord
	Records []TagInfo `json:"records"`
}

type UpdateTagReq struct {
	Id   string `json:"id"`
	Name string `json:"name"`
	Type string `json:"type"`
	Sort int    `json:"sort"`
}

type UpdateTagRes struct {
	Base
}
